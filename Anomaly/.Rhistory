# Run univariate checks in each file
for (file in files) {
path = paste(clinical.dir, "/", file, sep = "")
message("Processing file: ", path)
# Get file timestamp to use as version name
file.info(path)
}
file.info("S:/RhoFED/ICAC2/PROSE/Statistics/Data/Complete/vsgp.sas7bdat")
for (file in files) {
path = paste(clinical.dir, "/", file, sep = "")
message("Processing file: ", path)
# Get file timestamp to use as version name
version.name = file.info(path)$mtime
message(version.name)
}
study = "PROSE"
files <- list.files(clinical.dir, pattern = "*.sas7bdat")
# Run univariate checks in each file
for (file in files) {
path <- paste(clinical.dir, "/", file, sep = "")
message("Processing file: ", path)
# Get file timestamp to use as version name
version.name <- file.info(path)$mtime
# Read file into dataframe
data <- read.sas7bdat(path)
# Extract dataset name
dataset.name <- data[1, "form_name"]
message(dataset.name)
break;
}
source("outlier_scout.R")
library(RMySQL)
con <- dbConnect(MySQL(),
user="rhover", password="rhover",
dbname="rhover", host="localhost")
?write.csv
for (file in files) {
path <- paste(clinical.dir, "/", file, sep = "")
message("Processing file: ", path)
# Get file timestamp to use as version name
version.name <- file.info(path)$mtime
# Read file into dataframe
data <- read.sas7bdat(path)
# Extract dataset name
dataset.name <- data[1, "form_name"]
# Find and load outliers
findAndLoadUnivariateOutliers(data, study, dataset.name, version.name, con)
# Write data to CSV file
out.path <- paste(output.dir, "/", dataset.name, ".csv")
write.csv(data, file = out.path)
break;
}
for (file in files) {
path <- paste(clinical.dir, "/", file, sep = "")
message("Processing file: ", path)
# Get file timestamp to use as version name
version.name <- file.info(path)$mtime
# Read file into dataframe
data <- read.sas7bdat(path)
# Extract dataset name
dataset.name <- data[1, "form_name"]
# Find and load outliers
findAndLoadUnivariateOutliers(data, study, dataset.name, version.name, con)
# Write data to CSV file
out.path <- paste(output.dir, "/", dataset.name, ".csv", sep = "")
write.csv(data, file = out.path)
break;
}
str(data$AAH_q18d)
unique(data$AAH_q18d)
length(unique(data$AAH_q14d))
files <- list.files(clinical.dir, pattern = "*.sas7bdat")
# Run univariate checks in each file
for (file in files) {
path <- paste(clinical.dir, "/", file, sep = "")
message("Processing file: ", path)
# Get file timestamp to use as version name
version.name <- file.info(path)$mtime
# Read file into dataframe
data <- read.sas7bdat(path)
# Extract dataset name
dataset.name <- data[1, "form_name"]
# Find and load outliers
findAndLoadUnivariateOutliers(data, study, dataset.name, version.name, con)
# Write data to CSV file
out.path <- paste(output.dir, "/", dataset.name, ".csv", sep = "")
write.csv(data, file = out.path)
break;
}
source("outlier_scout.R")
con <- dbConnect(MySQL(),
user="rhover", password="rhover",
dbname="rhover", host="localhost")
# Get list of SAS data files
files <- list.files(clinical.dir, pattern = "*.sas7bdat")
# Run univariate checks in each file
for (file in files) {
path <- paste(clinical.dir, "/", file, sep = "")
message("Processing file: ", path)
# Get file timestamp to use as version name
version.name <- file.info(path)$mtime
# Read file into dataframe
data <- read.sas7bdat(path)
# Extract dataset name
dataset.name <- data[1, "form_name"]
# Find and load outliers
findAndLoadUnivariateOutliers(data, study, dataset.name, version.name, con)
# Write data to CSV file
out.path <- paste(output.dir, "/", dataset.name, ".csv", sep = "")
write.csv(data, file = out.path)
break;
}
files <- list.files(clinical.dir, pattern = "*.sas7bdat")
# Run univariate checks in each file
for (file in files) {
path <- paste(clinical.dir, "/", file, sep = "")
message("Processing file: ", path)
# Get file timestamp to use as version name
version.name <- file.info(path)$mtime
# Read file into dataframe
data <- read.sas7bdat(path)
# Extract dataset name
dataset.name <- data[1, "form_name"]
# Find and load outliers
findAndLoadUnivariateOutliers(data, study, dataset.name, version.name, con)
# Write data to CSV file
out.path <- paste(output.dir, "/", dataset.name, ".csv", sep = "")
write.csv(data, file = out.path)
}
files <- list.files(clinical.dir, pattern = "*.sas7bdat")
# Run univariate checks in each file
for (file in files) {
path <- paste(clinical.dir, "/", file, sep = "")
message("Processing file: ", path)
# Get file timestamp to use as version name
version.name <- file.info(path)$mtime
# Read file into dataframe
data <- read.sas7bdat(path)
# Extract dataset name
dataset.name <- data[1, "form_name"]
# Find and load outliers
findAndLoadUnivariateOutliers(data, study, dataset.name, version.name, con)
# Write data to CSV file
out.path <- paste(output.dir, "/", dataset.name, ".csv", sep = "")
write.csv(data, file = out.path)
}
# Get list of SAS data files
files <- list.files(clinical.dir, pattern = "*.sas7bdat")
# Run univariate checks in each file
for (file in files) {
path <- paste(clinical.dir, "/", file, sep = "")
message("Processing file: ", path)
# Get file timestamp to use as version name
version.name <- file.info(path)$mtime
# Read file into dataframe
data <- read.sas7bdat(path)
# Extract dataset name
dataset.name <- data[1, "form_name"]
# Find and load outliers
findAndLoadUnivariateOutliers(data, study, dataset.name, version.name, con)
# Write data to CSV file
out.path <- paste(output.dir, "/", dataset.name, ".csv", sep = "")
write.csv(data, file = out.path)
}
source("outlier_scout.R")
files <- list.files(clinical.dir, pattern = "*.sas7bdat")
# Run univariate checks in each file
for (file in files) {
path <- paste(clinical.dir, "/", file, sep = "")
message("Processing file: ", path)
# Get file timestamp to use as version name
version.name <- file.info(path)$mtime
# Read file into dataframe
data <- read.sas7bdat(path)
# Extract dataset name
dataset.name <- data[1, "form_name"]
# Find and load outliers
findAndLoadUnivariateOutliers(data, study, dataset.name, version.name, con)
# Write data to CSV file
out.path <- paste(output.dir, "/", dataset.name, ".csv", sep = "")
write.csv(data, file = out.path)
}
files <- list.files(clinical.dir, pattern = "*.sas7bdat")
# Run univariate checks in each file
for (file in files) {
path <- paste(clinical.dir, "/", file, sep = "")
message("Processing file: ", path)
# Get file timestamp to use as version name
version.name <- file.info(path)$mtime
# Read file into dataframe
data <- read.sas7bdat(path)
# Replace variable names with labels
attrs = attr(data, "column.info")
num.labels = length(attrs)
labels = vector(length = num.labels)
for (i in 1:num.labels) {
if (is.null(attrs[[i]]$label)) {
labels[i] = attrs[[i]]$name
}
else {
labels[i] = attrs[[i]]$label
}
}
colnames(data) = gsub(" ", "_", labels)
# Extract dataset name
dataset.name <- data[1, "form_name"]
# Find and load outliers
findAndLoadUnivariateOutliers(data, study, dataset.name, version.name, con)
# Write data to CSV file
out.path <- paste(output.dir, "/", dataset.name, ".csv", sep = "")
write.csv(data, file = out.path)
}
files <- list.files(clinical.dir, pattern = "*.sas7bdat")
# Run univariate checks in each file
for (file in files) {
path <- paste(clinical.dir, "/", file, sep = "")
message("Processing file: ", path)
# Get file timestamp to use as version name
version.name <- file.info(path)$mtime
# Read file into dataframe
data <- read.sas7bdat(path)
# Replace variable names with labels
attrs = attr(data, "column.info")
num.labels = length(attrs)
labels = vector(length = num.labels)
for (i in 1:num.labels) {
if (is.null(attrs[[i]]$label)) {
labels[i] = attrs[[i]]$name
}
else {
labels[i] = attrs[[i]]$label
}
}
colnames(data) = gsub(" ", "_", labels)
# Extract dataset name
dataset.name <- data[1, "form_name"]
# Find and load outliers
findAndLoadUnivariateOutliers(data, study, dataset.name, version.name, con)
# Write data to CSV file
out.path <- paste(output.dir, "/", dataset.name, ".csv", sep = "")
write.csv(data, file = out.path)
}
files <- list.files(clinical.dir, pattern = "*.sas7bdat")
# Run univariate checks in each file
for (file in files) {
path <- paste(clinical.dir, "/", file, sep = "")
message("Processing file: ", path)
# Get file timestamp to use as version name
version.name <- file.info(path)$mtime
# Read file into dataframe
data <- read.sas7bdat(path)
# Replace variable names with labels
attrs = attr(data, "column.info")
num.labels = length(attrs)
labels = vector(length = num.labels)
for (i in 1:num.labels) {
if (is.null(attrs[[i]]$label)) {
labels[i] = attrs[[i]]$name
}
else {
labels[i] = attrs[[i]]$label
}
}
colnames(data) = gsub(" ", "_", labels)
# Extract dataset name
dataset.name <- data[1, "form_name"]
# Find and load outliers
findAndLoadUnivariateOutliers(data, study, dataset.name, version.name, con)
# Write data to CSV file
out.path <- paste(output.dir, "/", dataset.name, ".csv", sep = "")
write.csv(data, file = out.path)
}
path = "S:/RhoFED/ICAC2/PROSE/Statistics/Data/Complete/vsgp.sas7bdat"
data = read.sas7bdat(path)
# Replace variable names with labels
attrs = attr(data, "column.info")
num.labels = length(attrs)
labels = vector(length = num.labels)
for (i in 1:num.labels) {
if (is.null(attrs[[i]]$label)) {
labels[i] = attrs[[i]]$name
}
else {
labels[i] = attrs[[i]]$label
}
}
colnames(data) = gsub(" ", "_", labels)
colnames(data)
head(data)
data <- data[,!c("Visit_Date", "Participant's_Initials")]
data <- data[,!c("Visit_Date", "Participant's_Initials"), with = FALSE]
data <- within(data, rm("Visit_Date"))
head(data)
data <- within(data, rm("Participant's_Initials"))
head(data)
length(data$RecruitID)
?sequence
?seq
seq(length.out = 5)
data$RecruitID = seq(length.out = 7867)
head(data)
?write.csv
write.csv(data, file="C:/Temp/anonymized_data.csv")
library(sas7bdat)
library(RMySQL)
source("outlier_scout.R")
clinical.dir <- "S:/RhoFED/ICAC2/PROSE/Statistics/Data/Complete"
output.dir <- "C:/RhoVer"
#clinical.dir <- "/Users/dhall/Data/Clinical"
#output.dir <- "/Users/dhall/Data/Output"
study <- "PROSE"
# Open database connection
con <- dbConnect(MySQL(),
user="rhover", password="rhover",
dbname="rhover", host="localhost")
# Get list of SAS data files
#files <- list.files(clinical.dir, pattern = "*.sas7bdat")
files <- list.files(clinical.dir)
# Run univariate checks in each file
for (file in files) {
path <- paste(clinical.dir, "/", file, sep = "")
message("Processing file: ", path)
# Get file timestamp to use as version name
version.name <- file.info(path)$mtime
# Read file into dataframe
#data <- read.sas7bdat(path)
data <- read.csv(path)
# Replace variable names with labels
if (FALSE) {
attrs = attr(data, "column.info")
num.labels = length(attrs)
labels = vector(length = num.labels)
for (i in 1:num.labels) {
if (is.null(attrs[[i]]$label)) {
labels[i] = attrs[[i]]$name
}
else {
labels[i] = attrs[[i]]$label
}
}
colnames(data) = gsub(" ", "_", labels)
}
# Extract dataset name
dataset.name <- data[1, "form_name"]
# Find and load outliers
findAndLoadUnivariateOutliers(data, study, dataset.name, version.name, con)
# Write data to CSV file
out.path <- paste(output.dir, "/", dataset.name, ".csv", sep = "")
write.csv(data, file = out.path)
}
library(sas7bdat)
library(RMySQL)
source("outlier_scout.R")
clinical.dir <- "S:/RhoFED/ICAC2/PROSE/Statistics/Data/Complete"
output.dir <- "C:/RhoVer"
study <- "PROSE"
files <- list.files(clinical.dir)
for (file in files) {
path <- paste(clinical.dir, "/", file, sep = "")
message("Processing file: ", path)
# Get file timestamp to use as version name
version.name <- file.info(path)$mtime
# Read file into dataframe
data <- read.sas7bdat(path)
#data <- read.csv(path)
# Replace variable names with labels
#if (FALSE) {
attrs = attr(data, "column.info")
num.labels = length(attrs)
labels = vector(length = num.labels)
for (i in 1:num.labels) {
if (is.null(attrs[[i]]$label)) {
labels[i] = attrs[[i]]$name
}
else {
labels[i] = attrs[[i]]$label
}
}
colnames(data) = gsub(" ", "_", labels)
#}
# Extract dataset name
dataset.name <- data[1, "form_name"]
# Find and load outliers
findAndLoadUnivariateOutliers(data, study, dataset.name, version.name, con)
# Write data to CSV file
out.path <- paste(output.dir, "/", dataset.name, ".csv", sep = "")
write.csv(data, file = out.path)
}
for (file in files) {
path <- paste(clinical.dir, "/", file, sep = "")
message("Processing file: ", path)
# Get file timestamp to use as version name
version.name <- file.info(path)$mtime
# Read file into dataframe
data <- read.sas7bdat(path)
#data <- read.csv(path)
# Replace variable names with labels
#if (FALSE) {
attrs = attr(data, "column.info")
num.labels = length(attrs)
labels = vector(length = num.labels)
for (i in 1:num.labels) {
if (is.null(attrs[[i]]$label)) {
labels[i] = attrs[[i]]$name
}
else {
labels[i] = attrs[[i]]$label
}
}
colnames(data) = gsub(" ", "_", labels)
#}
# Extract dataset name
dataset.name <- data[1, "form_name"]
# Find and load outliers
findAndLoadUnivariateOutliers(data, study, dataset.name, version.name, con)
# Write data to CSV file
out.path <- paste(output.dir, "/", dataset.name, ".csv", sep = "")
write.csv(data, file = out.path)
}
for (file in files) {
path <- paste(clinical.dir, "/", file, sep = "")
message("Processing file: ", path)
# Get file timestamp to use as version name
version.name <- file.info(path)$mtime
# Read file into dataframe
data <- read.sas7bdat(path)
#data <- read.csv(path)
# Replace variable names with labels
#if (FALSE) {
attrs = attr(data, "column.info")
num.labels = length(attrs)
labels = vector(length = num.labels)
for (i in 1:num.labels) {
if (is.null(attrs[[i]]$label)) {
labels[i] = attrs[[i]]$name
}
else {
labels[i] = attrs[[i]]$label
}
}
colnames(data) = gsub(" ", "_", labels)
#}
# Extract dataset name
dataset.name <- data[1, "form_name"]
# Find and load outliers
findAndLoadUnivariateOutliers(data, study, dataset.name, version.name, con)
# Write data to CSV file
out.path <- paste(output.dir, "/", dataset.name, ".csv", sep = "")
write.csv(data, file = out.path)
}
files <- list.files(clinical.dir, pattern = "*.sas7bdat")
for (file in files) {
path <- paste(clinical.dir, "/", file, sep = "")
message("Processing file: ", path)
# Get file timestamp to use as version name
version.name <- file.info(path)$mtime
# Read file into dataframe
data <- read.sas7bdat(path)
#data <- read.csv(path)
# Replace variable names with labels
#if (FALSE) {
attrs = attr(data, "column.info")
num.labels = length(attrs)
labels = vector(length = num.labels)
for (i in 1:num.labels) {
if (is.null(attrs[[i]]$label)) {
labels[i] = attrs[[i]]$name
}
else {
labels[i] = attrs[[i]]$label
}
}
colnames(data) = gsub(" ", "_", labels)
#}
# Extract dataset name
dataset.name <- data[1, "form_name"]
# Find and load outliers
findAndLoadUnivariateOutliers(data, study, dataset.name, version.name, con)
# Write data to CSV file
out.path <- paste(output.dir, "/", dataset.name, ".csv", sep = "")
write.csv(data, file = out.path)
}
library(sas7bdat)
library(car)
library(DMwR)
library(spatstat)
library(caret)
library(lmtest)
library(RMySQL)
source("outlier_scout.R")
path = "S:/RhoFED/ICAC2/PROSE/Statistics/Data/Complete/vsgp.sas7bdat"
data = read.sas7bdat(path)
# Replace variable names with labels
attrs = attr(data, "column.info")
num.labels = length(attrs)
labels = vector(length = num.labels)
for (i in 1:num.labels) {
if (is.null(attrs[[i]]$label)) {
labels[i] = attrs[[i]]$name
}
else {
labels[i] = attrs[[i]]$label
}
}
colnames(data) = gsub(" ", "_", labels)
par(mfrow=c(1, 1))
o <- findBivariateOutliers(data, 20, 23, cutoff.residual = 2, cutoff.density = 0)
plotBivariateOutliers(data, 20, 23, o)
o <- findBivariateOutliers(data, 20, 23, cutoff.residual = 3, cutoff.density = 0)
plotBivariateOutliers(data, 20, 23, o)
o <- findBivariateOutliers(data, 20, 23, cutoff.residual = 2, cutoff.density = 8)
plotBivariateOutliers(data, 20, 23, o)
